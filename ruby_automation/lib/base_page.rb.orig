require 'rubygems'
require 'selenium-webdriver'

class BasePage  
  attr_accessor :db_object, :url, :title, :driver

  def initialize(driver, test_env)    
  end
  
  def visit()
    self.driver.navigate.to self.url
  end  
    
  def url_is_ok?()   
    if self.driver.current_url == self.url
       true
    else
       false
    end    
  end    
  
  def text_present?(text)
    if self.driver.page_source().include?(text)
       true
    else
       false
    end
  end 
  
<<<<<<< .merge_file_a02032
  def element_present?(page, element_name, locate_by)
    sleep 3 
    elements = []
    case locate_by
      when "css"
        elements = page.driver.find_elements(:css => page.db_object.elements.find_by_name(element_name).by_css_locator)
      when "xpath"
        elements = page.driver.find_elements(:xpath => page.db_object.elements.find_by_name(element_name).by_xpath_locator)      
      when "id"
        elements = page.driver.find_elements(:id => page.db_object.elements.find_by_name(element_name).by_id_locator)       
      else
      puts "Error: Case statement needs a valid locateby string!"
    end  
    elements[0].nil? ? false : true
	end 
  
=======
>>>>>>> .merge_file_a02876
  def string_empty?(text)   
    if text.empty?
       true
    else
       false
    end    
  end  
  
  def text_present_wait?(text, wait_time)   
   wait = Selenium::WebDriver::Wait.new(:timeout => wait_time)
   wait.until {true if self.driver.page_source().include?(text)}    
  end

  def element_present?(page, element_name, locate_by)
    case locate_by
      when "css"
        elements = page.driver.find_elements(:css => page.db_object.elements.find_by_name(element_name).by_css_locator)
      when "xpath"
        elements = page.driver.find_elements(:xpath => page.db_object.elements.find_by_name(element_name).by_xpath_locator)      
      when "id"
        elements = page.driver.find_elements(:id => page.db_object.elements.find_by_name(element_name).by_id_locator)       
      else
      puts "Error: Case statement needs a valid locateby string!"
    end
    elements[0].displayed? ? true : false
  end  
      
  def select_option(element, text)   
    element.send_keys(text) 
    element.send_keys(:return)
    element.send_keys(:tab) 
    sleep 1
  end   
  
  def enter_airport(element, text)   
    element.send_keys(text) 
    element.send_keys(:arrow_down)    
    element.send_keys(:tab)      
  end    
end

 def element_present?(page, element_name, locate_by)
    sleep 3 
    elements = []
    case locate_by
      when "css"
        elements = page.driver.find_elements(:css => page.db_object.elements.find_by_name(element_name).by_css_locator)
      when "xpath"
        elements = page.driver.find_elements(:xpath => page.db_object.elements.find_by_name(element_name).by_xpath_locator)      
      when "id"
        elements = page.driver.find_elements(:id => page.db_object.elements.find_by_name(element_name).by_id_locator)       
      else
      puts "Error: Case statement needs a valid locateby string!"
    end  
    elements[0].nil? ? false : true
 end
